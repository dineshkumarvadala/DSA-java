2 D array :-
2 D array consists columns ,
int [] [] arr = new int[3][2] 
the first sr bracket represents rows and second bracket represents columns
while declaring the array we have to give number of rows and  mentioned no. of columns is optional .

Print the 2 d array , user input :-
import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

    
        System.out.print("Enter number of rows: ");
        int rows = scanner.nextInt();
        System.out.print("Enter number of columns: ");
        int cols = scanner.nextInt();

        int[][] array = new int[rows][cols];

      
        System.out.println("Enter the elements row by row:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                System.out.print("Element at (" + i + "," + j + "): ");
                array[i][j] = scanner.nextInt();
            }
        }

      
        System.out.println("\nThe 2D array is:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                System.out.print(array[i][j] + " ");
            }
            System.out.println(); 
        }

        
    }
}


printing zigzag pattern :-


public class Main {
    public static void main(String[] args) {
        int[][] arr = {
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        };

        int n = arr.length;
        int sum = 0;

        System.out.print("Z shape elements: ");
        for (int i = 0; i < n; i++) {
            if (i == 0 || i == n - 1) {
              
                for (int j = 0; j < n; j++) {
                    System.out.print(arr[i][j] + " ");
                    sum += arr[i][j];
                }
            } else {
                
                int j = n - i - 1;
                System.out.print(arr[i][j] + " ");
                sum += arr[i][j];
            }
        }

        System.out.println("\nSum of Z shape elements: " + sum);
    }
}




Columns are dyanmic 
small example :-
int [][] arr = {
{1,2,3},
{4,5},
{6,7,8,9}
};
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Find the missing number in an sorted array [1,2,3,5,6,7,8,9].

code:-
public class Main {
    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 6, 7, 8, 9};
    for (int i  = 0; i <arr.length - 1; i++){
        if (arr[i]+1 != arr[i+1]){
            int res = arr[i] + 1;
            System.out.print("Missing no: " + res);
        }
    }
        
    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Maximum consecutive ones [1,0,1,0,1,1,1,0,1,1] .

public class Main{
    public static void main(String []args){
        int arr[] = {1,0,1,0,1,1,1,0,1,1};
        int max = 0;
        int count = 0;
       for (int i = 0; i<arr.length -1; i++){
           if (arr[i]== 1){
               count ++;
           }else {
               count = 0;
           }
           max = Math.max(count,max);
       }
       System.out.print(max);
    }
}

---max inbuilt function
int max(int count,int max){
  if(count>max){
    return count;
  }
  else{
    return max;
  }
}

Take a sq matrix and rotate 90 degrees :-

public class Main {
    public static void main(String[] args) {
        int[][] arr = {
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        };

        int n = arr.length;

      
        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                int temp = arr[i][j];
                arr[i][j] = arr[j][i];
                arr[j][i] = temp;
            }
        }

        for (int[] row : arr)
            for (int i = 0, j = row.length - 1; i < j; i++, j--) {
                int temp = row[i];
                row[i] = row[j];
                row[j] = temp;
            }

        for (int[] row : arr) {
            for (int val : row) System.out.print(val + " ");
            System.out.println();
        }
    }
}


Leaders in an array :-
code :-

public class Main {
    public static void main(String[] args) {
        int[] arr = {11, 3, 5, 9, 4, 6};

        int n = arr.length;
        int max = arr[n - 1]; 

        System.out.print("Leaders: " + max + ",");

        
        for (int i = n - 2; i >= 0; i--) {
            if (arr[i] > max) {
                max = arr[i];
                System.out.print(max + ",");
            }
        }
    }
}




[11,3,5,9,4,6] --> [11,9,6]

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
